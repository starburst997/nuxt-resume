name: pipeline

on:
  push:
    branches: ["main"]

  workflow_dispatch:

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout github page
        uses: actions/checkout@v3
        with:
          repository: starburst997/starburst997.github.io
          path: git
          ref: "master"
          lfs: false
          token: ${{ secrets.pat }}
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::install"
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::ci"
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            git/resume
            .nuxt
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('git/resume') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Test
        run: ${{ steps.detect-package-manager.outputs.manager }} run test
      - name: Lint
        run: ${{ steps.detect-package-manager.outputs.manager }} run lint
      - name: Create env file
        run: |
          touch .env
          echo "CI=1" >> .env
          echo "CI_PROJECT_URL='https://github.com/starburst997/nuxt-resume'" >> .env
          echo "CI_COMMIT_SHORT_SHA='${{ steps.vars.outputs.sha_short }}'" >> .env
          echo "NODE_ENV='production'" >> .env
      - name: Check outputs env
        run: cat .env
      - name: Static HTML export with Nuxt
        run: |
          ${{ steps.detect-package-manager.outputs.manager }} run generate
          ${{ steps.detect-package-manager.outputs.manager }} run strip-scripts
      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest
      - name: Generate PDF
        run: ci/generate-pdf.sh
      - name: Remove files
        run: |
          rm -Rf git/resume/_nuxt
          rm git/resume/200.html
          rm git/resume/README.md
      - name: Commit changes
        working-directory: git
        run: |
          git config --global user.name 'Jean-Denis Boivin'
          git config --global user.email 'jd@boiv.in'
          git add resume
          git commit -am "[AUTO] Update Résumé"
          git push
      